<mah:MetroWindow x:Class="WallpaperCore.Windows.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 xmlns:userControls="clr-namespace:WallpaperCore.UserControls"
                 mc:Ignorable="d"
                 Title="Wallpaper" Height="575" Width="530"
                 ResizeMode="CanMinimize"
                 WindowStartupLocation="CenterScreen"
                 Icon="/Resources/appIcon.ico"
                 ShowIconOnTitleBar="False"
                 DataContext="{Binding MainViewModel, Source={StaticResource ViewModelLocator}}">
    <Window.Resources>
        <BitmapImage x:Key="DefaultImage" UriSource="/Resources/placeholder_background.jpg" />
    </Window.Resources>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button Content="">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Click">
                        <b:InvokeCommandAction Command="{Binding SettingsCommand}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <Button.ContentTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <iconPacks:PackIconForkAwesome Width="22"
                                                           Height="22"
                                                           VerticalAlignment="Center"
                                                           Kind="Cog" />
                            <TextBlock Margin="4 0 0 0"
                                       VerticalAlignment="Center"
                                       Text="{Binding}" />
                        </StackPanel>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <b:Interaction.Triggers>
        <b:EventTrigger EventName="Closed">
            <b:InvokeCommandAction Command="{Binding ClosedCommand}" />
        </b:EventTrigger>
        <b:EventTrigger EventName="Loaded">
            <b:InvokeCommandAction Command="{Binding StartupCommand}" />
        </b:EventTrigger>
    </b:Interaction.Triggers>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout x:Name="FirstFlyout" Header="Settings" Position="Right" Width="250"
                        IsOpen="{Binding ShowSettings}">
                <userControls:SettingsUserControl />
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <TabControl Grid.Column="1" Margin="0,50,0,50">
            <TabItem Header="Main">
                <Grid FocusManager.FocusedElement="{Binding ElementName=TextBoxDirectory}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45" />
                        <RowDefinition Height="45" />
                        <RowDefinition Height="45" />
                        <RowDefinition Height="240" />
                    </Grid.RowDefinitions>
                    <TextBox Grid.Row="0" Name="TextBoxDirectory" Padding="7" Margin="5"
                             Text="{Binding RunningDirectoryPath}"
                             Style="{StaticResource MahApps.Styles.TextBox}" mah:TextBoxHelper.Watermark="Image folder" />
                    <CheckBox Grid.Row="1" Margin="6" Content="Include subfolders"
                              IsChecked="{Binding IncludeSubfolders}"
                              Style="{DynamicResource MahApps.Styles.CheckBox.Win10}" />
                    <Button Grid.Row="2" Margin="5">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                                <Setter Property="Content" Value="_Start" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                        <Setter Property="Content" Value="_Restart" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="Click">
                                <b:InvokeCommandAction Command="{Binding StartCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                    </Button>
                    <StackPanel Grid.Row="3" Margin="5, 20, 5 ,0"
                                Visibility="{Binding IsRunning, Converter={StaticResource BoolToVisibility}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="5*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" Grid.ColumnSpan="3" Name="ImagePreview"
                                   Height="190"
                                   Stretch="UniformToFill"
                                   Source="{Binding PreviewImage, FallbackValue={StaticResource DefaultImage}}" />

                            <Button Grid.Column="0" BorderThickness="0" Background="Transparent">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="LightGray"
                                                                    TargetName="Border" />
                                                            <Setter Property="Opacity" Value="0.5" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                                <iconPacks:ForkAwesome Width="25"
                                                       Height="15"
                                                       Kind="AngleDoubleLeft" />
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:InvokeCommandAction
                                            Command="{Binding PreviousCommand}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Button>
                            <Button Grid.Column="1" BorderThickness="0" Background="Transparent">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="LightGray"
                                                                    TargetName="Border" />
                                                            <Setter Property="Opacity" Value="0.5" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                                <StackPanel>
                                    <StackPanel Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibility}, ConverterParameter=switch, FallbackValue=Visible}">
                                        <iconPacks:ForkAwesome Width="25"
                                                               Height="15"
                                                               Kind="Pause" />
                                    </StackPanel>
                                    <StackPanel Visibility="{Binding IsPaused, Converter={StaticResource BoolToVisibility}, FallbackValue=Collapsed}">
                                        <iconPacks:ForkAwesome Width="25"
                                                               Height="15"
                                                               Kind="Play" />
                                    </StackPanel>
                                </StackPanel>
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:InvokeCommandAction
                                            Command="{Binding PauseCommand}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Button>
                            <Button Grid.Column="2" BorderThickness="0" Background="Transparent">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center"
                                                                          VerticalAlignment="Center" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="LightGray"
                                                                    TargetName="Border" />
                                                            <Setter Property="Opacity" Value="0.5" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                                <iconPacks:ForkAwesome Width="25"
                                                       Height="15"
                                                       Kind="AngleDoubleRight" />
                                <b:Interaction.Triggers>
                                    <b:EventTrigger EventName="Click">
                                        <b:InvokeCommandAction
                                            Command="{Binding NextCommand}" />
                                    </b:EventTrigger>
                                </b:Interaction.Triggers>
                            </Button>
                        </Grid>
                        <ProgressBar Value="{Binding Progress}" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Bookmarks">
                <userControls:BookmarksUserControl />
            </TabItem>
        </TabControl>
    </Grid>
</mah:MetroWindow>